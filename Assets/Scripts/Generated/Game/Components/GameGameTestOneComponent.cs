//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameTestOneEntity { get { return GetGroup(GameMatcher.GameTestOne).GetSingleEntity(); } }
    public Game.TestOne gameTestOne { get { return gameTestOneEntity.gameTestOne; } }
    public bool hasGameTestOne { get { return gameTestOneEntity != null; } }

    public GameEntity SetGameTestOne(int newOne) {
        if (hasGameTestOne) {
            throw new Entitas.EntitasException("Could not set GameTestOne!\n" + this + " already has an entity with Game.TestOne!",
                "You should check if the context already has a gameTestOneEntity before setting it or use context.ReplaceGameTestOne().");
        }
        var entity = CreateEntity();
        entity.AddGameTestOne(newOne);
        return entity;
    }

    public void ReplaceGameTestOne(int newOne) {
        var entity = gameTestOneEntity;
        if (entity == null) {
            entity = SetGameTestOne(newOne);
        } else {
            entity.ReplaceGameTestOne(newOne);
        }
    }

    public void RemoveGameTestOne() {
        gameTestOneEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.TestOne gameTestOne { get { return (Game.TestOne)GetComponent(GameComponentsLookup.GameTestOne); } }
    public bool hasGameTestOne { get { return HasComponent(GameComponentsLookup.GameTestOne); } }

    public void AddGameTestOne(int newOne) {
        var index = GameComponentsLookup.GameTestOne;
        var component = (Game.TestOne)CreateComponent(index, typeof(Game.TestOne));
        component.one = newOne;
        AddComponent(index, component);
    }

    public void ReplaceGameTestOne(int newOne) {
        var index = GameComponentsLookup.GameTestOne;
        var component = (Game.TestOne)CreateComponent(index, typeof(Game.TestOne));
        component.one = newOne;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTestOne() {
        RemoveComponent(GameComponentsLookup.GameTestOne);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameTestOne;

    public static Entitas.IMatcher<GameEntity> GameTestOne {
        get {
            if (_matcherGameTestOne == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameTestOne);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameTestOne = matcher;
            }

            return _matcherGameTestOne;
        }
    }
}
