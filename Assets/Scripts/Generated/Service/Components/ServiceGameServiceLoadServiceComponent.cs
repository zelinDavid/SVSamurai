//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceContext {

    public ServiceEntity gameServiceLoadServiceEntity { get { return GetGroup(ServiceMatcher.GameServiceLoadService).GetSingleEntity(); } }
    public Game.Service.LoadServiceComponent gameServiceLoadService { get { return gameServiceLoadServiceEntity.gameServiceLoadService; } }
    public bool hasGameServiceLoadService { get { return gameServiceLoadServiceEntity != null; } }

    public ServiceEntity SetGameServiceLoadService(Game.Service.ILoadService newLoadService) {
        if (hasGameServiceLoadService) {
            throw new Entitas.EntitasException("Could not set GameServiceLoadService!\n" + this + " already has an entity with Game.Service.LoadServiceComponent!",
                "You should check if the context already has a gameServiceLoadServiceEntity before setting it or use context.ReplaceGameServiceLoadService().");
        }
        var entity = CreateEntity();
        entity.AddGameServiceLoadService(newLoadService);
        return entity;
    }

    public void ReplaceGameServiceLoadService(Game.Service.ILoadService newLoadService) {
        var entity = gameServiceLoadServiceEntity;
        if (entity == null) {
            entity = SetGameServiceLoadService(newLoadService);
        } else {
            entity.ReplaceGameServiceLoadService(newLoadService);
        }
    }

    public void RemoveGameServiceLoadService() {
        gameServiceLoadServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceEntity {

    public Game.Service.LoadServiceComponent gameServiceLoadService { get { return (Game.Service.LoadServiceComponent)GetComponent(ServiceComponentsLookup.GameServiceLoadService); } }
    public bool hasGameServiceLoadService { get { return HasComponent(ServiceComponentsLookup.GameServiceLoadService); } }

    public void AddGameServiceLoadService(Game.Service.ILoadService newLoadService) {
        var index = ServiceComponentsLookup.GameServiceLoadService;
        var component = (Game.Service.LoadServiceComponent)CreateComponent(index, typeof(Game.Service.LoadServiceComponent));
        component.LoadService = newLoadService;
        AddComponent(index, component);
    }

    public void ReplaceGameServiceLoadService(Game.Service.ILoadService newLoadService) {
        var index = ServiceComponentsLookup.GameServiceLoadService;
        var component = (Game.Service.LoadServiceComponent)CreateComponent(index, typeof(Game.Service.LoadServiceComponent));
        component.LoadService = newLoadService;
        ReplaceComponent(index, component);
    }

    public void RemoveGameServiceLoadService() {
        RemoveComponent(ServiceComponentsLookup.GameServiceLoadService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServiceMatcher {

    static Entitas.IMatcher<ServiceEntity> _matcherGameServiceLoadService;

    public static Entitas.IMatcher<ServiceEntity> GameServiceLoadService {
        get {
            if (_matcherGameServiceLoadService == null) {
                var matcher = (Entitas.Matcher<ServiceEntity>)Entitas.Matcher<ServiceEntity>.AllOf(ServiceComponentsLookup.GameServiceLoadService);
                matcher.componentNames = ServiceComponentsLookup.componentNames;
                _matcherGameServiceLoadService = matcher;
            }

            return _matcherGameServiceLoadService;
        }
    }
}
